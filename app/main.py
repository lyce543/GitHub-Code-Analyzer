from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from app.routes import router
from dotenv import load_dotenv
import os

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö
required_env_vars = ["OPENROUTER_API_KEY"]
missing_vars = [var for var in required_env_vars if not os.getenv(var)]

if missing_vars:
    print(f"‚ùå Missing environment variables: {', '.join(missing_vars)}")
    print("Please check your .env file")
else:
    print("‚úÖ Environment variables loaded successfully")

app = FastAPI(title="GitHub AI Code Analyzer", version="1.0.0")

# –î–æ–¥–∞—î–º–æ CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ä–æ—É—Ç–∏
app.include_router(router)

# –°—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏ (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)
app.mount("/", StaticFiles(directory="frontend", html=True), name="frontend")

if __name__ == "__main__":
    import uvicorn
    print("üöÄ Starting GitHub AI Code Analyzer...")
    print("üìù Make sure you have set OPENROUTER_API_KEY in your .env file")
    uvicorn.run(app, host="0.0.0.0", port=8000)